---
# Tasks to install postgresql
#
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS-specific taks
  include: "{{ ansible_os_family }}.yml"

- name: postgresql service state
  service: name=postgresql state=started enabled=yes

- name: transfer db files
  copy:
      src: files/{{ item }}
      dest: /tmp/
  with_items:
      - init.sql
      - postbooks_quickstart-4.10.1.backup

- name: pgpass file
  file:
      dest: "{{ ansible_env.HOME }}/.pgpass"
      state: touch
      mode: 0600

- name: pgpass contents
  lineinfile:
      dest: "{{ ansible_env.HOME }}/.pgpass"
      mode: 0600
      line: '127.0.0.1:5432:xtuple:admin:admin'
      state: present

- name: postgresql init
  become_user: postgres
  shell: psql < /tmp/init.sql

- name: drop postgresql db
  become_user: postgres
  postgresql_db:
      name: xtuple
      state: absent

- name: postgresql db
  become_user: postgres
  postgresql_db:
      name: xtuple
      encoding: UTF-8
      owner: admin
      lc_collate: en_US.UTF-8
      lc_ctype: en_US.UTF-8
      state: present

- name: plv8 extnsion
  postgresql_ext:
      login_host: 127.0.0.1
      login_user: admin
      login_password: admin
      db: xtuple
      name: plv8

- name: Postgres listen address
  lineinfile:
      dest: "{{ postgresql_conf_dir }}postgresql.conf"
      regexp: '^listen_addresses\s*=\s*'
      line: "listen_addresses = '*'"
      state: present
  notify: restart postgresql

- name: pg_hba authentication
  lineinfile:
      dest: "{{ postgresql_conf_dir }}pg_hba.conf"
      line: "host   xtuple  all 0.0.0.0/0   md5"
      state: present
  notify: restart postgresql

- name: postgresql quickstart
  shell: pg_restore -h 127.0.0.1 -U admin -d xtuple /tmp/postbooks_quickstart-4.10.1.backup

- name: remove db files
  file:
      path: "/tmp/{{ item }}"
      state: absent
  with_items:
      - init.sql
      - postbooks_quickstart-4.10.1.backup
