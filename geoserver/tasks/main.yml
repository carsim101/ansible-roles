---
# Tasks to install postgresql
#
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS-specific taks
  include: "{{ ansible_os_family }}.yml"

- name: Generate postgis password
  shell: pwgen -s 20 1
  register: postgis_pwd
  when: not skip_postgis_db

- name: "Postgis password"
  debug: var=postgis_pwd.stdout
  when: not skip_postgis_db

- name: Make postgis geoserver user
  become_user: postgres
  postgresql_user: name=geoserver password="{{ postgis_pwd.stdout }}"
  when: not skip_postgis_db

- name: Make geoserver db
  become_user: postgres
  postgresql_db: name=geoserver owner=geoserver template=template0 encoding=UTF-8
  when: not skip_postgis_db

- name: Enable postgis extension
  become_user: postgres
  postgresql_ext: name=postgis db=geoserver
  when: not skip_postgis_db

- name: Copy geoserver war
  copy:
      dest: "{{ tomcat_webapp_dir}}/geoserver.war"
      src: files/geoserver.war

- name: Copy geoexplorer war
  copy:
      dest: "{{ tomcat_webapp_dir }}/geoexplorer.war"
      src: files/geoexplorer.war

- name: copy java jai and jai_imageio
  unarchive:
      src: files/jai_jai-imageio-linux-amd64.tar.gz
      dest: "{{ jre_dir }}"

- name: Restart tomcat (to deploy wars)
  service: name={{ tomcat_version }} state=restarted

- name: remove geoserver bundled jai/jai-imageio
  file: 
    path: "{{ tomcat_webapp_dir }}/geoserver/WEB-INF/lib/{{ item }}"
    state: absent
  with_items:
      - jai_codec-1.1.3.jar
      - jai_core-1.1.3.jar
      - jai_imageio-1.1.jar

- name: enable apache config
  template:
      src: geoserver.conf.j2
      dest: "{{ apache_sites_conf_dir }}/geoserver.conf"

- name: enable apache config
  file: 
      dest: "{{ apache_sites_conf_enabled_dir }}/geoserver.conf"
      src: "{{ apache_sites_conf_dir }}/geoserver.conf"
      state: link
  notify: restart apache
  when: ansible_os_family=='Debian'

- name: setup lets encrypt SSL
  shell: certbot certonly --keep -n --apache -m "{{ admin_from_email }}" -d "{{ hostname }}" --agree-tos
  when: use_https
  notify: restart apache

